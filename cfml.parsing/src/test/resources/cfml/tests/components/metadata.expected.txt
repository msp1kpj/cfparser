/*===TOKENS===*/
COMPONENT                <component>
IDENTIFIER               <oshen>
':'                      <:>
IDENTIFIER               <displayLabel>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <${lastName} ${firstName}>
CLOSE_STRING             <">
IDENTIFIER               <transient>
'{'                      <{>
FUNCTION                 <function>
IDENTIFIER               <foo>
'('                      <(>
')'                      <)>
IDENTIFIER               <transient>
IDENTIFIER               <bar>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <snafu>
CLOSE_STRING             <">
IDENTIFIER               <wtf>
':'                      <:>
IDENTIFIER               <ikr>
IDENTIFIER               <rt>
':'                      <:>
OPEN_STRING              <">
STRING_LITERAL           <brb>
CLOSE_STRING             <">
'{'                      <{>
RETURN                   <return>
OPEN_STRING              <">
STRING_LITERAL           <woohoo>
CLOSE_STRING             <">
';'                      <;>
'}'                      <}>
'}'                      <}>
/*===TREE===*/
(scriptBlock
  (componentDeclaration
    component
    (componentAttribute
      (identifier oshen)
      :
      (identifier displayLabel)
      =
      (startExpression
        (compareExpression
          (baseExpression
            (unaryExpression
              (primaryExpression
                (literalExpression
                  (stringLiteral " (stringLiteralPart ${lastName} ${firstName}) ")
                )
              )
            )
          )
        )
      )
    )
    (componentAttribute (identifier transient))
    (componentGuts
      {
      (element
        (functionDeclaration
          function
          (identifier foo)
          (
          parameterList
          )
          (functionAttribute (identifier transient))
          (functionAttribute
            (identifier bar)
            =
            (stringLiteral " (stringLiteralPart snafu) ")
          )
          (functionAttribute (identifier wtf) : (identifier ikr))
          (functionAttribute
            (identifier rt)
            :
            (stringLiteral " (stringLiteralPart brb) ")
          )
          (compoundStatement
            {
            (statement
              (returnStatement
                return
                (startExpression
                  (compareExpression
                    (baseExpression
                      (unaryExpression
                        (primaryExpression
                          (literalExpression (stringLiteral " (stringLiteralPart woohoo) "))
                        )
                      )
                    )
                  )
                )
                ;
              )
            )
            }
          )
        )
      )
      }
    )
  )
)
/*======*/
/*===DECOMPILE===*/
component displayLabel.oshen='${lastName} ${firstName}' transient {
  public function foo() transient bar='snafu' wtf=ikr rt='brb'    {
      return 'woohoo';

    }
}
/*======*/